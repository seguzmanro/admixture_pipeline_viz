% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualization.R
\name{visualize_admixture}
\alias{visualize_admixture}
\title{High-level wrapper function for library usage}
\usage{
visualize_admixture(
  q_file = NULL,
  input_dir = NULL,
  fam_file,
  popmap_file,
  coords_file,
  output_dir = "results",
  k_value = NULL,
  log_dir = NULL,
  dpi = 300,
  labels = FALSE,
  bbox = NULL,
  padding = 0.15,
  parallel_workers = 4,
  cache_dir = NULL
)
}
\arguments{
\item{q_file}{Path to single Q file (character, optional). If provided, processes
only this file. Mutually exclusive with input_dir.}

\item{input_dir}{Directory containing multiple Q files (character, optional).
If provided, processes all .Q files in the directory. Mutually exclusive with q_file.}

\item{fam_file}{Path to PLINK .fam file (character, required). Contains sample
information and must match the Q file dimensions.}

\item{popmap_file}{Path to population mapping CSV (character, required).
Two-column file with sample IDs and population assignments.}

\item{coords_file}{Path to coordinates CSV (character, required).
Three-column file with population names, longitude, and latitude.}

\item{output_dir}{Output directory (character, default: "results").
Directory where all output files will be saved.}

\item{k_value}{Specific K value to process (integer, optional).
If provided, only processes Q files with this K value. If NULL, processes all K values.}

\item{log_dir}{Directory with .out files for CV plot (character, optional).
If provided, generates cross-validation error plots from ADMIXTURE log files.}

\item{dpi}{Resolution for PNG plots (integer, default: 300).
Higher values create sharper but larger image files.}

\item{labels}{Add population labels to maps (logical, default: FALSE).
If TRUE, adds population names as text labels on the spatial maps.}

\item{bbox}{Custom bounding box as c(xmin, ymin, xmax, ymax) (numeric vector, optional).
If provided, uses this bounding box instead of adaptive calculation.}

\item{padding}{Padding for adaptive bbox (numeric, default: 0.15).
Fraction of the data range to add as padding around population coordinates.}

\item{parallel_workers}{Number of parallel workers (integer, default: 4).
Number of CPU cores to use for parallel processing. Increase for faster processing
on multi-core systems.}

\item{cache_dir}{Directory for caching spatial data (character, default: package library).
Absolute path where downloaded spatial data will be cached. If NULL, uses the package
library location for consistent caching across working directories.}
}
\value{
NULL (invisibly). All outputs are saved to files in the output directory.
}
\description{
This is the main function for users who want to use the package programmatically.
It provides a comprehensive interface for generating ADMIXTURE visualizations
with full control over all parameters.
}
\details{
This function provides a complete interface for generating ADMIXTURE visualizations.
It automatically:
\itemize{
  \item{Validates all input files and data consistency}
  \item{Downloads and caches spatial data (elevation, water features, boundaries)}
  \item{Generates admixture bar plots for each K value}
  \item{Creates spatial maps with pie charts showing population admixture}
  \item{Produces cross-validation error plots (if log files provided)}
  \item{Saves session information for reproducibility}
}
}
\examples{
\dontrun{
# Single Q file with custom settings
visualize_admixture(
  q_file = "admixture_results/population.3.Q",
  fam_file = "data/population.fam",
  popmap_file = "data/population_popmap.csv",
  coords_file = "data/population_coordinates.csv",
  output_dir = "admixture_results",
  k_value = 3,
  labels = TRUE,
  dpi = 300,
  parallel_workers = 8
)

# Batch processing with CV error plots
visualize_admixture(
  input_dir = "admixture_results",
  log_dir = "admixture_results",
  fam_file = "data/population.fam",
  popmap_file = "data/population_popmap.csv",
  coords_file = "data/population_coordinates.csv",
  output_dir = "batch_results",
  parallel_workers = 4
)
}
}
